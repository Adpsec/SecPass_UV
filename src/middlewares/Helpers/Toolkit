package cypherhash.helpers;

public final class ToolKit
{

	public static boolean ArraysComparative(byte[] a, byte[] b)
	{
		boolean equals = true;
		if (a.length != b.length)
		{
			return false;
		}
		else
		{
			for (int i = 0; i < a.length; i++)
			{

				if ((new Byte(a[i])).equals(b[i]) == false)
				{
					equals = false;
					break;
				}
			}
		}
		return equals;
	}
	
	{
		if (obj == null)
		{
			return null;
		}
		BinaryFormatter bf = new BinaryFormatter();
		try (MemoryStream ms = new MemoryStream())
		{
			bf.Serialize(ms, obj);
			return ms.ToArray();
		}
	}
	
	public static Object ByteArrayToObject(byte[] arrBytes)
	{
		BinaryFormatter binForm = new BinaryFormatter();
		try (MemoryStream memStream = new MemoryStream())
		{
			memStream.Write(arrBytes, 0, arrBytes.length);
			memStream.Seek(0, SeekOrigin.Begin);
			Object obj = (Object)binForm.Deserialize(memStream);
			return obj;
		}
	}
}

